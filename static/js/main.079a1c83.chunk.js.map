{"version":3,"sources":["TodoItem.js","NewItem.js","Filter.js","todosData.js","App.js","index.js"],"names":["TodoItem","item","handleChange","handleOnDelete","className","type","checked","completed","visibility","hide","onChange","e","id","style","fontStyle","color","textDecoration","text","onClick","NewItem","props","useState","term","setTerm","onSubmit","preventDefault","onFormSubmit","placeholder","value","target","Filter","label","todosData","App","todoList","setTodoList","setHide","filtered","filter","updateTodoList","map","todo","pop","length","task","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAAe,SAASA,EAAT,GAA2D,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,eAMrD,OACE,sBAAKC,UAAU,YAAf,UACE,uBACEC,KAAK,WACLC,QAASL,EAAKM,UACdC,WAAYP,EAAKQ,MAAQR,EAAKM,UAC9BG,SAAU,SAACC,GAAD,OAAOT,EAAaD,EAAKW,OAErC,mBAAGC,MAAOZ,EAAKM,UAbI,CACrBO,UAAW,SACXC,MAAO,UACPC,eAAgB,gBAU8B,KAA5C,SAAmDf,EAAKgB,OACxD,wBAAQb,UAAU,SAASc,QAAS,SAACP,GAAD,OAAOR,EAAeF,EAAKW,KAA/D,uBCbS,SAASO,EAAQC,GAC9B,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KASA,OACE,qBAAKnB,UAAU,UAAf,SACE,uBAAMoB,SATV,SAAsBb,GACpBA,EAAEc,iBACW,KAATH,IACJF,EAAMM,aAAaJ,GACnBC,EAAQ,MAKN,UACE,uBACEnB,UAAU,UACVC,KAAK,OACLsB,YAAY,aACZC,MAAON,EACPZ,SAAU,SAACC,GAAD,OAAOY,EAAQZ,EAAEkB,OAAOD,UAEpC,wBAAQxB,UAAU,WAAlB,sBCtBO,SAAS0B,EAAT,GAA0C,IAAxBC,EAAuB,EAAvBA,MAAO7B,EAAgB,EAAhBA,aACtC,OACE,mCACE,kCACE,uBAAOG,KAAK,WAAWK,SAAUR,IAChC6B,OCLT,IA4BeC,EA5BG,CACd,CACIpB,GAAI,EACJK,KAAM,qBACNV,WAAW,GAEf,CACIK,GAAI,EACJK,KAAM,mBACNV,WAAW,GAEf,CACIK,GAAI,EACJK,KAAM,mBACNV,WAAW,GAEf,CACIK,GAAI,EACJK,KAAM,WACNV,WAAW,GAEf,CACIK,GAAI,EACJK,KAAM,mCACNV,WAAW,ICjBJ,SAAS0B,IACtB,MAAgCZ,mBAASW,GAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KACA,EAAwBd,oBAAS,GAAjC,mBAAOZ,EAAP,KAAa2B,EAAb,KACIC,EAAW5B,EACXyB,EAASI,QAAO,SAACrC,GACf,OAAOA,EAAKM,aAEd2B,EAEJ,SAAShC,EAAaU,GACpB,IAAI2B,EAAiBL,EAASM,KAAI,SAACC,GACjC,OAAIA,EAAK7B,KAAOA,EACP,2BACF6B,GADL,IAEElC,WAAYkC,EAAKlC,YAGdkC,KAETN,EAAYI,GAad,SAASpC,EAAeS,GACtBuB,EAAYD,EAASI,QAAO,SAACrC,GAAD,OAAUA,EAAKW,KAAOA,MAMpD,OACE,qCACE,sBAAKR,UAAU,YAAf,UACE,cAAC0B,EAAD,CAAQC,MAAM,iBAAiB7B,aAbrC,WACEkC,GAAS3B,MAaL,cAACqB,EAAD,CAAQC,MAAM,eAAe7B,aARnC,WACEiC,EAAYD,EAASM,IAAIN,EAASQ,IAAtB,YAA+BR,QAQtCG,EAASG,KAAI,SAACvC,GAAD,OACZ,cAACD,EAAD,CAEEC,KAAMA,EACNC,aAAcA,EACdC,eAAgBA,GAHXF,EAAKW,OAMO,IAApBsB,EAASS,QAAgB,oDAE5B,cAACxB,EAAD,CAASO,aAhCb,SAAsBkB,GACpBT,EAAY,GAAD,mBACND,GADM,CAET,CAAEtB,KAAMsB,EAASS,OAAQ1B,KAAM2B,EAAMrC,WAAW,YC3BtDsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACd,EAAD,MAEFe,SAASC,eAAe,U","file":"static/js/main.079a1c83.chunk.js","sourcesContent":["export default function TodoItem({ item, handleChange, handleOnDelete }) {\r\n  const completedStyle = {\r\n    fontStyle: \"italic\",\r\n    color: \"#cdcdcd\",\r\n    textDecoration: \"line-through\",\r\n  };\r\n  return (\r\n    <div className=\"todo-item\">\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={item.completed}\r\n        visibility={item.hide && item.completed}\r\n        onChange={(e) => handleChange(item.id)}\r\n      />\r\n      <p style={item.completed ? completedStyle : null}>{item.text}</p>\r\n      <button className=\"delete\" onClick={(e) => handleOnDelete(item.id)}>\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport default function NewItem(props) {\r\n  const [term, setTerm] = useState(\"\");\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (term === \"\") return;\r\n    props.onFormSubmit(term);\r\n    setTerm(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"newItem\">\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          className=\"myInput\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Item\"\r\n          value={term}\r\n          onChange={(e) => setTerm(e.target.value)}\r\n        />\r\n        <button className=\"myButton\">Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","export default function Filter({ label, handleChange }) {\r\n  return (\r\n    <>\r\n      <label>\r\n        <input type=\"checkbox\" onChange={handleChange} />\r\n        {label}\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n","const todosData = [\r\n    {\r\n        id: 1,\r\n        text: \"Take out the trash\",\r\n        completed: true\r\n    },\r\n    {\r\n        id: 2,\r\n        text: \"Grocery shopping\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: 3,\r\n        text: \"Clean gecko tank\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: 4,\r\n        text: \"Mow lawn\",\r\n        completed: true\r\n    },\r\n    {\r\n        id: 5,\r\n        text: \"Catch up on Arrested Development\",\r\n        completed: false\r\n    }\r\n]\r\n\r\nexport default todosData","import TodoItem from \"./TodoItem\";\r\nimport NewItem from \"./NewItem\";\r\nimport Filter from \"./Filter\";\r\nimport \"./style.css\";\r\nimport todosData from \"./todosData\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function App() {\r\n  const [todoList, setTodoList] = useState(todosData);\r\n  const [hide, setHide] = useState(false);\r\n  let filtered = hide\r\n    ? todoList.filter((item) => {\r\n        return item.completed ? false : true;\r\n      })\r\n    : todoList;\r\n\r\n  function handleChange(id) {\r\n    let updateTodoList = todoList.map((todo) => {\r\n      if (todo.id === id) {\r\n        return {\r\n          ...todo,\r\n          completed: !todo.completed,\r\n        };\r\n      }\r\n      return todo;\r\n    });\r\n    setTodoList(updateTodoList);\r\n  }\r\n\r\n  function handleSubmit(task) {\r\n    setTodoList([\r\n      ...todoList,\r\n      { id: ++todoList.length, text: task, completed: false },\r\n    ]);\r\n  }\r\n\r\n  function hideCompleted() {\r\n    setHide(!hide);\r\n  }\r\n  function handleOnDelete(id) {\r\n    setTodoList(todoList.filter((item) => item.id !== id));\r\n  }\r\n  function handleReverse() {\r\n    setTodoList(todoList.map(todoList.pop, [...todoList]));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"todo-list\">\r\n        <Filter label=\"hide completed\" handleChange={hideCompleted} />\r\n        <Filter label=\"reverse list\" handleChange={handleReverse} />\r\n        {filtered.map((item) => (\r\n          <TodoItem\r\n            key={item.id}\r\n            item={item}\r\n            handleChange={handleChange}\r\n            handleOnDelete={handleOnDelete}\r\n          />\r\n        ))}\r\n        {todoList.length === 0 && <p>Nothing to do...</p>}\r\n      </div>\r\n      <NewItem onFormSubmit={handleSubmit} />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./style.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}